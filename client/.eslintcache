[{"/Users/lucaserlacher/Desktop/CoVent/client/src/components/ProfilePage/profilePage.tsx":"1","/Users/lucaserlacher/Desktop/CoVent/client/src/utils/systemFunction.ts":"2","/Users/lucaserlacher/Desktop/CoVent/client/src/utils/userDatabaseFetch.ts":"3","/Users/lucaserlacher/Desktop/CoVent/client/src/components/landingPage/landingPage.tsx":"4","/Users/lucaserlacher/Desktop/CoVent/client/src/components/landingPage/topBarLandingPage/TopBarLandingPageLogInButton/TopBarLandingPageLogInButton.tsx":"5","/Users/lucaserlacher/Desktop/CoVent/client/src/components/landingPage/searchbar/searchbar.tsx":"6"},{"size":4079,"mtime":1607165452880,"results":"7","hashOfConfig":"8"},{"size":3804,"mtime":1607167457104,"results":"9","hashOfConfig":"8"},{"size":3134,"mtime":1607165257633,"results":"10","hashOfConfig":"8"},{"size":1047,"mtime":1607167999614,"results":"11","hashOfConfig":"8"},{"size":1145,"mtime":1607167978594,"results":"12","hashOfConfig":"8"},{"size":2462,"mtime":1607168427825,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"xd2iwn",{"filePath":"16","messages":"17","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},"/Users/lucaserlacher/Desktop/CoVent/client/src/components/ProfilePage/profilePage.tsx",["29","30","31","32","33"],"/Users/lucaserlacher/Desktop/CoVent/client/src/utils/systemFunction.ts",["34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50"],"import { SystemActionTypes } from './../types/systemTypes';\nimport { Dispatch } from 'react';\nimport { setUserFirebaseId, setUserToLoggedIn, setUserToLoggedOut } from '../redux/systemState/systemStateActions';\nimport fire from './firebase';\nimport { addProfileToUserAtDataBase, getUserById, registerUserToDataBase, getUserByEmailAndPassword, updateUserProfileData } from './userDatabaseFetch';\nimport { User, Profile } from '../types/userTypes';\nimport { setUser } from '../redux/userState/userActions';\n\nexport const userLogin = (creds: any) => {\n    return (dispatch: any) => {\n        fire\n            .auth()\n            .signInWithEmailAndPassword(creds.email, creds.password)\n            .then((res) => {\n                dispatch(setUserFirebaseId(res.user?.uid));\n                dispatch(setUserToLoggedIn());\n                getUserByEmailAndPassword(creds.email, creds.password).then(updatedUser => {\n                    if (updatedUser.id) {\n                        getUserById(updatedUser.id.toString()).then(user => {\n                            const newUser = user[0]\n                            dispatch(setUser(newUser))\n                        })\n                    }\n                })\n            })\n            .catch(err => {\n                alert(err)\n                console.log(err)\n            });\n    };\n};\n\nexport const userLogOut = () => {\n    return (dispatch: any) => {\n        fire.auth().signOut().then(function () {\n            dispatch(setUserToLoggedOut())\n            dispatch(setUser({\n                email: '',\n                password: '',\n                firstName: '',\n                lastName: '',\n                profile: {\n                    age: '',\n                    description: '',\n                    gender: '',\n                    location: '',\n                    picture: '',\n                    userId: 0,\n                }\n            }))\n        }).catch(function (error) {\n            console.log(error)\n        });\n    }\n}\n\n\nexport const userSignUp = (user: User) => {\n    return (dispatch: any) => {\n        if (user.email && user.password) {\n            fire\n                .auth()\n                .createUserWithEmailAndPassword(user.email, user.password)\n                .then((firebaseUser) => {\n                    dispatch(setUserFirebaseId(firebaseUser.user?.uid));\n                    dispatch(setUserToLoggedIn());\n                    registerUserToDataBase(user).then(registeredUser => {\n                        if (registeredUser.id) {\n                            if (user.profile) {\n                                user.profile.userId = Number(registeredUser.id);\n                                addProfileToUserAtDataBase(user.profile)\n                                    .then(() => {\n                                        if (user.profile && user.profile.userId) {\n                                            getUserById(user.profile.userId.toString()).then(updatedUser => {\n                                                dispatch(setUser(updatedUser[0]))\n                                            })\n                                        }\n                                    })\n                            }\n                        }\n                    }).catch(e => console.log(e))\n                })\n                .catch(err => {\n                    console.log(err)\n                });\n        }\n    };\n};\n\nexport const profileUpdate = (user: User) => {\n    return (dispatch: any) => {\n        if (user && user.profile) {\n            updateUserProfileData(user.profile)\n                .then(() => {\n                    console.log('INSIDE SYSTEM FUNCTION PROFILE UPDATE-->');\n                    console.log('user-->', user);\n                    dispatch(setUser(user))\n                })\n        }\n    }\n}\n","/Users/lucaserlacher/Desktop/CoVent/client/src/utils/userDatabaseFetch.ts",["51","52"],"/Users/lucaserlacher/Desktop/CoVent/client/src/components/landingPage/landingPage.tsx",["53","54","55","56","57","58","59"],"/Users/lucaserlacher/Desktop/CoVent/client/src/components/landingPage/topBarLandingPage/TopBarLandingPageLogInButton/TopBarLandingPageLogInButton.tsx",["60","61"],"import { userInfo } from 'os'\nimport React, { ReactElement } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { RootState } from '../../../../types/combinedStoreTypes'\nimport { userLogin, userLogOut } from '../../../../utils/systemFunction'\n\nconst USER_LOGGED_IN_TEXT = 'Log In'\nconst USER_LOGGED_OUT_TEXT = 'Log Out'\nconst buttonClassName = 'log_in_button'\ninterface TopBarSignInButtonProp {\n  setShowModal: React.Dispatch<React.SetStateAction<boolean>>\n}\n\nexport const TopBarLandingPageLogInButton = ({ setShowModal }: TopBarSignInButtonProp): ReactElement => {\n  const dispatch = useDispatch()\n  const userLoggedIn = useSelector((state: RootState) => state.system.loggedIn)\n\n  function handleLogOut() {\n    dispatch(userLogOut())\n  }\n\n  function displayModal() {\n    setShowModal(true);\n  }\n\n  return (\n    <div className=\"log_in_button_container\">\n      {userLoggedIn\n        ? <button className={buttonClassName} onClick={handleLogOut}>{USER_LOGGED_OUT_TEXT}</button>\n        : <button className={buttonClassName} onClick={displayModal}>\n          {USER_LOGGED_IN_TEXT}\n        </button>\n      }\n    </div>\n  )\n}\n\n","/Users/lucaserlacher/Desktop/CoVent/client/src/components/landingPage/searchbar/searchbar.tsx",["62","63","64","65","66","67"],"import React, { ReactElement, useState, useEffect, FormEvent } from 'react';\n// import { useSelector } from 'react-redux';\n// import { RootState } from './../../../types/combinedStoreTypes';\nimport { UserL, City, ProfileNew } from './../../../types/userLucasTypes';\nimport { getAllUsers, getAllCities, getAllProfiles } from './../../../utils/userDatabaseFetch';\nimport { Button, Modal } from 'react-bootstrap';\nimport './searchbar.css'\n\n\n\nexport const Searchbar = (): ReactElement => {\n\n  const [users, setUsers] = useState<ProfileNew[]>([]);\n  const [city, setCity] = useState('');\n  const [show, setShow] = useState(false);\n\n\n  useEffect(() => {\n    getAllProfiles()\n      .then((list) => {\n        setUsers(list)\n      })\n  }, []);\n\n  const handleChange = async (ev: React.ChangeEvent<HTMLInputElement>) => {\n    setCity(ev.target.value.toLowerCase());\n  };\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  const handleSubmit = (e: FormEvent) => {\n    console.log('fuck')\n  }\n\n  let renderUserWithCities;\n  if (users[0] && users[0].cities) {\n    renderUserWithCities = (\n      users.filter(user => user.cities.length\n        && user.cities[0].name.toLowerCase().includes(city)).map((el, i) => {\n          return <div key={i} className=\"image_container\">\n            <img src={el.picture} className=\"searchbar_image\" alt=\"profile pic\" />\n          </div>\n        }\n        )\n    )\n  }\n\n  let renderAllUsers;\n  if (users[0]) {\n    renderAllUsers = (\n      users.map((el, i) => {\n        return <div key={i} className=\"image_container\">\n          <img src={el.picture} className=\"searchbar_image\" alt=\"profile pic\" onClick={handleShow} />\n        </div>\n      })\n    )\n  }\n\n  return (\n    <div>\n      <form>\n        <input type=\"text\" placeholder=\"city\" value={city} onChange={handleChange} />\n      </form>\n      <div className=\"container\">\n        {!city ? renderAllUsers : renderUserWithCities}\n        <Modal size=\"lg\"\n          aria-labelledby=\"contained-modal-title-vcenter\"\n          centered\n          show={show} onHide={handleClose}>\n          <Modal.Header>\n            <Modal.Title>Inspect Profile</Modal.Title>\n            <Modal.Body>\n\n            </Modal.Body>\n            <Modal.Footer>\n              <Button variant=\"secondary\" onClick={handleClose}>\n                Close\n                  </Button>\n\n            </Modal.Footer>\n          </Modal.Header>\n\n        </Modal>\n      </div>\n    </div>\n  )\n};",{"ruleId":"68","severity":1,"message":"69","line":5,"column":10,"nodeType":"70","messageId":"71","endLine":5,"endColumn":17},{"ruleId":"68","severity":1,"message":"72","line":7,"column":10,"nodeType":"70","messageId":"71","endLine":7,"endColumn":17},{"ruleId":"73","severity":1,"message":"74","line":14,"column":28,"nodeType":"75","messageId":"76","endLine":14,"endColumn":33},{"ruleId":"68","severity":1,"message":"77","line":18,"column":9,"nodeType":"70","messageId":"71","endLine":18,"endColumn":21},{"ruleId":"78","severity":1,"message":"79","line":40,"column":70,"nodeType":"80","messageId":"81","endLine":40,"endColumn":73,"suggestions":"82"},{"ruleId":"68","severity":1,"message":"83","line":1,"column":10,"nodeType":"70","messageId":"71","endLine":1,"endColumn":27},{"ruleId":"68","severity":1,"message":"84","line":2,"column":10,"nodeType":"70","messageId":"71","endLine":2,"endColumn":18},{"ruleId":"68","severity":1,"message":"69","line":6,"column":16,"nodeType":"70","messageId":"71","endLine":6,"endColumn":23},{"ruleId":"73","severity":1,"message":"85","line":9,"column":27,"nodeType":"70","messageId":"86","endLine":9,"endColumn":37},{"ruleId":"78","severity":1,"message":"79","line":9,"column":34,"nodeType":"80","messageId":"81","endLine":9,"endColumn":37,"suggestions":"87"},{"ruleId":"73","severity":1,"message":"74","line":10,"column":12,"nodeType":"75","messageId":"76","endLine":10,"endColumn":30},{"ruleId":"73","severity":1,"message":"88","line":10,"column":13,"nodeType":"70","messageId":"86","endLine":10,"endColumn":26},{"ruleId":"78","severity":1,"message":"79","line":10,"column":23,"nodeType":"80","messageId":"81","endLine":10,"endColumn":26,"suggestions":"89"},{"ruleId":"73","severity":1,"message":"74","line":34,"column":12,"nodeType":"75","messageId":"76","endLine":34,"endColumn":30},{"ruleId":"73","severity":1,"message":"88","line":34,"column":13,"nodeType":"70","messageId":"86","endLine":34,"endColumn":26},{"ruleId":"78","severity":1,"message":"79","line":34,"column":23,"nodeType":"80","messageId":"81","endLine":34,"endColumn":26,"suggestions":"90"},{"ruleId":"73","severity":1,"message":"74","line":59,"column":12,"nodeType":"75","messageId":"76","endLine":59,"endColumn":30},{"ruleId":"73","severity":1,"message":"88","line":59,"column":13,"nodeType":"70","messageId":"86","endLine":59,"endColumn":26},{"ruleId":"78","severity":1,"message":"79","line":59,"column":23,"nodeType":"80","messageId":"81","endLine":59,"endColumn":26,"suggestions":"91"},{"ruleId":"73","severity":1,"message":"74","line":91,"column":12,"nodeType":"75","messageId":"76","endLine":91,"endColumn":30},{"ruleId":"73","severity":1,"message":"88","line":91,"column":13,"nodeType":"70","messageId":"86","endLine":91,"endColumn":26},{"ruleId":"78","severity":1,"message":"79","line":91,"column":23,"nodeType":"80","messageId":"81","endLine":91,"endColumn":26,"suggestions":"92"},{"ruleId":"78","severity":1,"message":"79","line":50,"column":63,"nodeType":"80","messageId":"81","endLine":50,"endColumn":66,"suggestions":"93"},{"ruleId":"78","severity":1,"message":"79","line":96,"column":69,"nodeType":"80","messageId":"81","endLine":96,"endColumn":72,"suggestions":"94"},{"ruleId":"68","severity":1,"message":"95","line":1,"column":31,"nodeType":"70","messageId":"71","endLine":1,"endColumn":40},{"ruleId":"68","severity":1,"message":"96","line":6,"column":10,"nodeType":"70","messageId":"71","endLine":6,"endColumn":21},{"ruleId":"68","severity":1,"message":"97","line":9,"column":10,"nodeType":"70","messageId":"71","endLine":9,"endColumn":21},{"ruleId":"68","severity":1,"message":"98","line":10,"column":10,"nodeType":"70","messageId":"71","endLine":10,"endColumn":29},{"ruleId":"68","severity":1,"message":"99","line":11,"column":10,"nodeType":"70","messageId":"71","endLine":11,"endColumn":32},{"ruleId":"68","severity":1,"message":"100","line":15,"column":9,"nodeType":"70","messageId":"71","endLine":15,"endColumn":17},{"ruleId":"68","severity":1,"message":"101","line":16,"column":9,"nodeType":"70","messageId":"71","endLine":16,"endColumn":21},{"ruleId":"68","severity":1,"message":"102","line":1,"column":10,"nodeType":"70","messageId":"71","endLine":1,"endColumn":18},{"ruleId":"68","severity":1,"message":"103","line":5,"column":10,"nodeType":"70","messageId":"71","endLine":5,"endColumn":19},{"ruleId":"68","severity":1,"message":"104","line":4,"column":10,"nodeType":"70","messageId":"71","endLine":4,"endColumn":15},{"ruleId":"68","severity":1,"message":"105","line":4,"column":17,"nodeType":"70","messageId":"71","endLine":4,"endColumn":21},{"ruleId":"68","severity":1,"message":"106","line":5,"column":10,"nodeType":"70","messageId":"71","endLine":5,"endColumn":21},{"ruleId":"68","severity":1,"message":"107","line":5,"column":23,"nodeType":"70","messageId":"71","endLine":5,"endColumn":35},{"ruleId":"68","severity":1,"message":"108","line":32,"column":9,"nodeType":"70","messageId":"71","endLine":32,"endColumn":21},{"ruleId":"68","severity":1,"message":"109","line":32,"column":25,"nodeType":"70","messageId":"71","endLine":32,"endColumn":37},"@typescript-eslint/no-unused-vars","'Profile' is defined but never used.","Identifier","unusedVar","'setUser' is defined but never used.","@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType","'initialState' is assigned a value but never used.","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["110","111"],"'SystemActionTypes' is defined but never used.","'Dispatch' is defined but never used.","Argument 'creds' should be typed with a non-any type.","anyTypedArg",["112","113"],"Argument 'dispatch' should be typed with a non-any type.",["114","115"],["116","117"],["118","119"],["120","121"],["122","123"],["124","125"],"'useEffect' is defined but never used.","'setUserName' is defined but never used.","'ProfilePage' is defined but never used.","'getUserByIdDispatch' is defined but never used.","'registerUserToDataBase' is defined but never used.","'dispatch' is assigned a value but never used.","'firebaseUser' is assigned a value but never used.","'userInfo' is defined but never used.","'userLogin' is defined but never used.","'UserL' is defined but never used.","'City' is defined but never used.","'getAllUsers' is defined but never used.","'getAllCities' is defined but never used.","'handleSubmit' is assigned a value but never used.","'e' is defined but never used.",{"messageId":"126","fix":"127","desc":"128"},{"messageId":"129","fix":"130","desc":"131"},{"messageId":"126","fix":"132","desc":"128"},{"messageId":"129","fix":"133","desc":"131"},{"messageId":"126","fix":"134","desc":"128"},{"messageId":"129","fix":"135","desc":"131"},{"messageId":"126","fix":"136","desc":"128"},{"messageId":"129","fix":"137","desc":"131"},{"messageId":"126","fix":"138","desc":"128"},{"messageId":"129","fix":"139","desc":"131"},{"messageId":"126","fix":"140","desc":"128"},{"messageId":"129","fix":"141","desc":"131"},{"messageId":"126","fix":"142","desc":"128"},{"messageId":"129","fix":"143","desc":"131"},{"messageId":"126","fix":"144","desc":"128"},{"messageId":"129","fix":"145","desc":"131"},"suggestUnknown",{"range":"146","text":"147"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"146","text":"148"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"149","text":"147"},{"range":"149","text":"148"},{"range":"150","text":"147"},{"range":"150","text":"148"},{"range":"151","text":"147"},{"range":"151","text":"148"},{"range":"152","text":"147"},{"range":"152","text":"148"},{"range":"153","text":"147"},{"range":"153","text":"148"},{"range":"154","text":"147"},{"range":"154","text":"148"},{"range":"155","text":"147"},{"range":"155","text":"148"},[1273,1276],"unknown","never",[538,541],[570,573],[1392,1395],[2055,2058],[3472,3475],[1406,1409],[2559,2562]]