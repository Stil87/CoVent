[{"/Users/lucaserlacher/Desktop/CoVent/client/src/reportWebVitals.ts":"1","/Users/lucaserlacher/Desktop/CoVent/client/src/components/landingPage/landingPage.tsx":"2","/Users/lucaserlacher/Desktop/CoVent/client/src/components/ProfilePage/profilePage.tsx":"3","/Users/lucaserlacher/Desktop/CoVent/client/src/redux/systemState/systemReducer.ts":"4","/Users/lucaserlacher/Desktop/CoVent/client/src/redux/directionState/directionActions.ts":"5","/Users/lucaserlacher/Desktop/CoVent/client/src/components/landingPage/searchbar/searchbar.tsx":"6","/Users/lucaserlacher/Desktop/CoVent/client/src/types/systemTypes.ts":"7","/Users/lucaserlacher/Desktop/CoVent/client/src/utils/userDatabaseFetch.ts":"8","/Users/lucaserlacher/Desktop/CoVent/client/src/components/landingPage/topBarLandingPage/TopBarSignUpButton/TopBarSignUpButton.tsx":"9","/Users/lucaserlacher/Desktop/CoVent/client/src/components/landingPage/topBarLandingPage/TopBarNewMatchesButton/TopBarNewMatchesButton.tsx":"10","/Users/lucaserlacher/Desktop/CoVent/client/src/utils/firebase.ts":"11"},{"size":425,"mtime":1606489573678,"results":"12","hashOfConfig":"13"},{"size":3196,"mtime":1607340676855,"results":"14","hashOfConfig":"13"},{"size":12100,"mtime":1607338635512,"results":"15","hashOfConfig":"13"},{"size":872,"mtime":1607080856138,"results":"16","hashOfConfig":"13"},{"size":204,"mtime":1607278323522,"results":"17","hashOfConfig":"13"},{"size":3270,"mtime":1607279159285,"results":"18","hashOfConfig":"13"},{"size":1069,"mtime":1607278315934,"results":"19","hashOfConfig":"13"},{"size":3908,"mtime":1607252829637,"results":"20","hashOfConfig":"13"},{"size":914,"mtime":1607101213913,"results":"21","hashOfConfig":"13"},{"size":766,"mtime":1607337260621,"results":"22","hashOfConfig":"13"},{"size":406,"mtime":1607342819089,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"xd2iwn",{"filePath":"26","messages":"27","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/lucaserlacher/Desktop/CoVent/client/src/reportWebVitals.ts",["47"],"/Users/lucaserlacher/Desktop/CoVent/client/src/components/landingPage/landingPage.tsx",["48","49","50","51","52","53","54"],"/Users/lucaserlacher/Desktop/CoVent/client/src/components/ProfilePage/profilePage.tsx",["55","56","57","58","59","60","61","62","63","64"],"import React from 'react';\nimport { FormEvent, useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { RootState } from '../../types/combinedStoreTypes';\nimport { User } from \"../../types/userTypes\";\nimport { Button, Modal } from 'react-bootstrap';\nimport { profileUpdate, addCityToProfile, addCategoryToProfile } from '../../utils/systemFunction';\nimport { ProfileNew, CityAdd } from \"../../types/userLucasTypes\";\nimport './profilePage.css';\nimport { Link } from 'react-router-dom';\nimport { getAllProfiles } from './../../utils/userDatabaseFetch';\nimport { addLike } from './../../utils/systemFunction';\n\nexport const ProfilePage = () => {\n\n  console.log('INSIDE PROFILE-->');\n  const user = useSelector((state: RootState) => state.user)\n  const currentDirection = useSelector((state: RootState) => state.direction)\n  const dispatch = useDispatch();\n\n  const initialState = {\n    picture: '',\n    description: '',\n    age: '',\n    gender: '',\n    location: '',\n  }\n\n  const initialStateCity: CityAdd = {\n    profileId: 0,\n    name: ''\n  }\n\n\n  const categories = [\n    'Athletics',\n    'Ball Sports',\n    'Beach Sports',\n    'Body & Mind',\n    'Cars',\n    'City',\n    'Climbing',\n    'Combat Sports',\n    'Cycling',\n    'Dancing',\n    'Equestrianism',\n    'Fishing: Catch & Release',\n    'Fitness',\n    'For Fun',\n    'Games',\n    'Hiking',\n    'Ice',\n    'Motorcycles',\n    'Multi-Sport',\n    'Nature',\n    'Party',\n    'Photography',\n    'Piloting',\n    'Pool',\n    'Racket Sports',\n    'Radio-controlled Piloting',\n    'Rowing',\n    'Shooting',\n    'Sky',\n    'Slacklining',\n    'Snow',\n    'Strength',\n    'Traveling',\n    'Underwater',\n    'Water',\n    'Wildlife Viewing',\n    'Wind'\n  ]\n\n  const [show, setShow] = useState(false);\n  const [showCityModal, setShowCityModal] = useState(false);\n  const [picture, setPicture] = useState('')\n  const [description, setDescription] = useState('')\n  const [age, setAge] = useState('')\n  const [gender, setGender] = useState('')\n  const [location, setLocation] = useState('')\n  const [city, setCity] = useState('');\n  const [category, setCategory] = useState('');\n  const [showCategoryModal, setShowCategoryModal] = useState(false);\n\n  const [profiles, setProfiles] = useState<ProfileNew[]>([]);\n\n  useEffect(() => {\n    getAllProfiles()\n      .then((list) => {\n        const filteredList = list.filter((el) => el.id !== user.id)\n        setProfiles(filteredList)\n        filterProfilesToShowExceptSwipedOnes(user, list)\n        if (currentDirection.length && user.profile && user.profile.id) {\n          sendLikesToBackEnd(currentDirection, user.profile.id)\n        }\n      })\n  }, []);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  const handleCloseCity = () => setShowCityModal(false);\n  const handleShowCity = () => setShowCityModal(true);\n  const handleShowCategory = () => setShowCategoryModal(true);\n  const handleCloseCategory = () => setShowCategoryModal(false);\n\n  const handleChange = (ev: React.ChangeEvent<HTMLInputElement>, cb: any) => {\n    cb(ev.target.value)\n  };\n\n  const handleSubmit = (e: FormEvent) => {\n    e.preventDefault()\n\n    if (user && user.profile) {\n      const newUs: User = {\n        ...user, profile: {\n          age: age !== \"\" ? age : user.profile.age,\n          categories: user.profile.categories,\n          cities: user.profile.cities,\n          description: description !== \"\" ? description : user.profile.description,\n          gender: gender !== \"\" ? gender : user.profile.gender,\n          hasNewMatch: user.profile.hasNewMatch,\n          id: user.profile.id,\n          likedProfile: user.profile.likedProfile,\n          location: location !== \"\" ? location : user.profile.location,\n          matched: user.profile.matched,\n          picture: picture !== \"\" ? picture : user.profile.picture,\n          receivedLike: user.profile.receivedLike,\n          userId: user.id,\n        }\n      }\n      dispatch(profileUpdate(newUs))\n    }\n  };\n\n  const handleCitySubmit = (e: FormEvent) => {\n    e.preventDefault()\n    if (user.profile && user.profile.id) {\n      const cityObj: CityAdd = {\n        profileId: user.profile.id,\n        name: city\n      }\n      dispatch(addCityToProfile(cityObj, user))\n    }\n  };\n\n  const handleCategorySubmit = (ev: any): any => {\n    console.log('e.target.value-->', ev.target.value);\n    setCategory(ev.target.value)\n    const categoryToSend = {\n      profileId: user.profile && user.profile.id,\n      name: ev.target.value\n    }\n    dispatch(addCategoryToProfile(categoryToSend, user))\n  };\n\n  const filterSwipedProfiles = (profiles: ProfileNew[], currentDir: string[]): ProfileNew[] => {\n    const result = [];\n    for (let i = 0; i < profiles.length; i++) {\n      let flag;\n      for (let a = 0; a < currentDir.length; a++) {\n        if (Number(currentDir[a].match(/\\d+/g)) === profiles[i].id) {\n          flag = true;\n          break;\n        }\n      }\n      if (!flag) {\n        result.push(profiles[i]);\n      } else {\n        flag = false;\n      }\n    }\n    return result;\n  };\n\n  const sendLikesToBackEnd = (currentDir: string[], profileId: number): void => {\n    currentDir.forEach((el) => {\n      console.log('el profilePage.tsx, line 174 el: ', el);\n      if (String(el.match(/[^\\s]+/)) === 'right') {\n        dispatch(addLike({\n          profileId: profileId,\n          givenLikeId: el.match(/\\d+/g)\n        }))\n      }\n    })\n  }\n\n  const filterProfilesToShowExceptSwipedOnes = (user: User, list: ProfileNew[]): void => {\n    console.log('user profilePage.tsx, line 188 user: ', user);\n    console.log('list profilePage.tsx, line 189 list: ', list);\n    // create table in back end where you keep track of swiped profiles\n    // user has many swipes ->  a swipe belongs to one user\n  }\n\n  return (\n    <div id=\"profile_body\">\n\n      <div className=\"profile_page_container\">\n\n        <div className=\"profile_page_header_container\">\n\n          <div>\n            <div className=\"user_first_name\">Benjamin</div>\n            <div>{user.profile && user.profile.age}</div>\n          </div>\n\n          <div className=\"profile_page_image_container\">\n            <img className=\"profile_page_image\" src={user.profile?.picture} alt=\"profile\" />\n          </div>\n\n          <div id=\"top_right_corner_btn\">\n            <Button variant=\"primary\" onClick={handleShow} className=\"profile_updatebutton\">Edit Profile</Button>\n            <Button variant=\"primary\" onClick={handleShowCity} className=\"city_add\">Pick a city</Button>\n          </div>\n        </div>\n\n        <div id=\"profile-page-body\">\n          <div id=\"selected-city\">Your city: {user && user.profile && user.profile.cities && user.profile.cities[0] && user.profile.cities[0].name}</div>\n\n          <div>Select activity first before going to matching</div>\n\n          <div id=\"sent-invitations-area\">\n            Invitations sent: {user && user.profile && user.profile.likedProfile &&\n              user.profile.likedProfile[0] && user.profile.likedProfile[0].user\n              && user.profile.likedProfile.map(el => el.user && el.user.firstName)}\n          </div>\n\n          <div id=\"received-invitation-area\">\n            <div id=\"received-invitation-title\">Invitations received: {user && user.profile && user.profile.receivedLike &&\n              user.profile.receivedLike[0] && user.profile.receivedLike[0].user\n              && user.profile.receivedLike.map(el => el.user && el.user.firstName)}\n            </div>\n            <div></div>\n            <Button id=\"accept-invitation-btn\">Accept</Button>\n            <Button id=\"reject-invitation-btn\">Decline</Button>\n          </div>\n          {/*\n          <Button variant=\"primary\" onClick={handleShowCity} className=\"city_add\">\n              Remove me\n          </Button> */}\n\n        </div>\n\n        <Modal show={show} onHide={handleClose}>\n          <div id=\"modal-background\">\n            <div id=\"edit-profile-modal-form\">\n              <Modal.Header>\n                <Modal.Title id=\"edit-profile-title\">Edit Your Profile</Modal.Title>\n                <Modal.Body>\n\n                  <form>\n                    <input name=\"picture\" id=\"\" placeholder=\"Picture\" onChange={(e) => {\n                      handleChange(e, setPicture)\n                    }}></input>\n                    <input name=\"description\" id=\"\" placeholder=\"Description\" onChange={(e) => {\n                      handleChange(e, setDescription)\n                    }}></input>\n                    <input name=\"age\" id=\"\" placeholder=\"Age\" onChange={(e) => {\n                      handleChange(e, setAge)\n                    }}></input>\n                    <input name=\"gender\" id=\"\" placeholder=\"Gender\" onChange={(e) => {\n                      handleChange(e, setGender)\n                    }}></input>\n                    <input name=\"location\" id=\"\" placeholder=\"Location\" onChange={(e) => {\n                      handleChange(e, setLocation)\n                    }}></input>\n                  </form>\n\n                </Modal.Body>\n                <Modal.Footer>\n                  <Button variant=\"secondary\" onClick={handleClose}>\n                    Close\n                  </Button>\n                  <Button variant=\"primary\" onClick={(e) => {\n                    handleSubmit(e)\n                    handleClose()\n                  }}>\n                    Save Changes\n                  </Button>\n                </Modal.Footer>\n              </Modal.Header>\n            </div>\n          </div>\n        </Modal>\n\n\n        <div>\n          <Modal show={showCityModal} onHide={handleCloseCity}>\n            <Modal.Header>\n              <Modal.Title>Add your City</Modal.Title>\n              <Modal.Body>\n                <form>\n                  <input name=\"city\" id=\"\" placeholder=\"City\" onChange={(e) => {\n                    handleChange(e, setCity)\n                  }}></input>\n                </form>\n              </Modal.Body>\n              <Modal.Footer>\n                <Button variant=\"secondary\" onClick={handleCloseCity}>\n                  Close\n                  </Button>\n                <Button variant=\"primary\" onClick={(e) => {\n                  handleCitySubmit(e)\n                  handleCloseCity()\n                }}>\n                  Select\n                  </Button>\n              </Modal.Footer>\n            </Modal.Header>\n          </Modal>\n\n        </div>\n\n      </div>\n\n\n      <div>\n        <Modal show={showCityModal} onHide={handleCloseCity}>\n          <Modal.Header>\n            <Modal.Title>Add your City</Modal.Title>\n            <Modal.Body>\n              <form>\n                <input name=\"city\" id=\"\" placeholder=\"City\" onChange={(e) => {\n                  handleChange(e, setCity)\n                }}></input>\n              </form>\n            </Modal.Body>\n            <Modal.Footer>\n              <Button variant=\"secondary\" onClick={handleCloseCity}>\n                Close\n                  </Button>\n              <Button variant=\"primary\" onClick={(e) => {\n                handleCitySubmit(e)\n                handleCloseCity()\n              }}>\n                Select\n                  </Button>\n            </Modal.Footer>\n          </Modal.Header>\n        </Modal>\n\n\n      </div>\n\n      <div>\n        <p>Select activity first before going to matching</p>\n\n        <select id=\"mySelect\" onChange={(e) => { handleCategorySubmit(e) }}>\n          {categories.map((el, i) => {\n            return <option key={i} value={el}>{el}</option>\n          })\n          }\n        </select>\n\n\n      </div>\n\n      {/* {user.profile && user.profile.id && currentDirection && currentDirection.length && sendLikesToBackEnd(currentDirection, user.profile.id)} */}\n\n      <Link to={{\n        pathname: '/swiping',\n        state: {\n          profiles: currentDirection.length === 0 ? profiles : filterSwipedProfiles(profiles, currentDirection)\n        }\n      }}>\n        <Button>Swiping</Button>\n      </Link>\n\n      <Link to=\"/matches\">\n        <Button>Matches</Button>\n      </Link>\n\n      <Link to=\"/chat\">\n        <Button>Chat</Button>\n      </Link>\n\n    </div>\n  )\n}","/Users/lucaserlacher/Desktop/CoVent/client/src/redux/systemState/systemReducer.ts",[],"/Users/lucaserlacher/Desktop/CoVent/client/src/redux/directionState/directionActions.ts",[],"/Users/lucaserlacher/Desktop/CoVent/client/src/components/landingPage/searchbar/searchbar.tsx",["65"],"/Users/lucaserlacher/Desktop/CoVent/client/src/types/systemTypes.ts",[],"/Users/lucaserlacher/Desktop/CoVent/client/src/utils/userDatabaseFetch.ts",["66","67","68","69","70","71","72","73","74"],"/Users/lucaserlacher/Desktop/CoVent/client/src/components/landingPage/topBarLandingPage/TopBarSignUpButton/TopBarSignUpButton.tsx",["75","76"],"/Users/lucaserlacher/Desktop/CoVent/client/src/components/landingPage/topBarLandingPage/TopBarNewMatchesButton/TopBarNewMatchesButton.tsx",["77"],"/Users/lucaserlacher/Desktop/CoVent/client/src/utils/firebase.ts",[],{"ruleId":"78","severity":1,"message":"79","line":3,"column":25,"nodeType":"80","messageId":"81","endLine":3,"endColumn":57},{"ruleId":"82","severity":1,"message":"83","line":6,"column":10,"nodeType":"84","messageId":"85","endLine":6,"endColumn":21},{"ruleId":"82","severity":1,"message":"86","line":9,"column":10,"nodeType":"84","messageId":"85","endLine":9,"endColumn":21},{"ruleId":"82","severity":1,"message":"87","line":10,"column":10,"nodeType":"84","messageId":"85","endLine":10,"endColumn":29},{"ruleId":"82","severity":1,"message":"88","line":11,"column":10,"nodeType":"84","messageId":"85","endLine":11,"endColumn":32},{"ruleId":"82","severity":1,"message":"89","line":13,"column":18,"nodeType":"84","messageId":"85","endLine":13,"endColumn":23},{"ruleId":"82","severity":1,"message":"90","line":15,"column":22,"nodeType":"84","messageId":"85","endLine":15,"endColumn":29},{"ruleId":"82","severity":1,"message":"91","line":21,"column":9,"nodeType":"84","messageId":"85","endLine":21,"endColumn":21},{"ruleId":"78","severity":1,"message":"79","line":14,"column":28,"nodeType":"80","messageId":"81","endLine":14,"endColumn":33},{"ruleId":"82","severity":1,"message":"92","line":21,"column":9,"nodeType":"84","messageId":"85","endLine":21,"endColumn":21},{"ruleId":"82","severity":1,"message":"93","line":29,"column":9,"nodeType":"84","messageId":"85","endLine":29,"endColumn":34},{"ruleId":"82","severity":1,"message":"94","line":83,"column":10,"nodeType":"84","messageId":"85","endLine":83,"endColumn":18},{"ruleId":"82","severity":1,"message":"95","line":84,"column":10,"nodeType":"84","messageId":"85","endLine":84,"endColumn":27},{"ruleId":"82","severity":1,"message":"96","line":104,"column":9,"nodeType":"84","messageId":"85","endLine":104,"endColumn":27},{"ruleId":"82","severity":1,"message":"97","line":105,"column":9,"nodeType":"84","messageId":"85","endLine":105,"endColumn":28},{"ruleId":"98","severity":1,"message":"99","line":107,"column":70,"nodeType":"100","messageId":"101","endLine":107,"endColumn":73,"suggestions":"102"},{"ruleId":"98","severity":1,"message":"99","line":147,"column":37,"nodeType":"100","messageId":"101","endLine":147,"endColumn":40,"suggestions":"103"},{"ruleId":"98","severity":1,"message":"99","line":147,"column":43,"nodeType":"100","messageId":"101","endLine":147,"endColumn":46,"suggestions":"104"},{"ruleId":"98","severity":1,"message":"99","line":39,"column":19,"nodeType":"100","messageId":"101","endLine":39,"endColumn":22,"suggestions":"105"},{"ruleId":"98","severity":1,"message":"99","line":50,"column":63,"nodeType":"100","messageId":"101","endLine":50,"endColumn":66,"suggestions":"106"},{"ruleId":"98","severity":1,"message":"99","line":96,"column":69,"nodeType":"100","messageId":"101","endLine":96,"endColumn":72,"suggestions":"107"},{"ruleId":"98","severity":1,"message":"99","line":122,"column":41,"nodeType":"100","messageId":"101","endLine":122,"endColumn":44,"suggestions":"108"},{"ruleId":"78","severity":1,"message":"109","line":132,"column":26,"nodeType":"84","messageId":"110","endLine":132,"endColumn":35},{"ruleId":"98","severity":1,"message":"99","line":132,"column":32,"nodeType":"100","messageId":"101","endLine":132,"endColumn":35,"suggestions":"111"},{"ruleId":"98","severity":1,"message":"99","line":132,"column":38,"nodeType":"100","messageId":"101","endLine":132,"endColumn":41,"suggestions":"112"},{"ruleId":"78","severity":1,"message":"113","line":142,"column":29,"nodeType":"84","messageId":"110","endLine":142,"endColumn":42},{"ruleId":"98","severity":1,"message":"99","line":142,"column":39,"nodeType":"100","messageId":"101","endLine":142,"endColumn":42,"suggestions":"114"},{"ruleId":"98","severity":1,"message":"99","line":142,"column":45,"nodeType":"100","messageId":"101","endLine":142,"endColumn":48,"suggestions":"115"},{"ruleId":"78","severity":1,"message":"79","line":11,"column":35,"nodeType":"80","messageId":"81","endLine":11,"endColumn":80},{"ruleId":"82","severity":1,"message":"116","line":19,"column":12,"nodeType":"84","messageId":"85","endLine":19,"endColumn":21},{"ruleId":"78","severity":1,"message":"79","line":9,"column":39,"nodeType":"80","messageId":"81","endLine":9,"endColumn":44},"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType","@typescript-eslint/no-unused-vars","'setUserName' is defined but never used.","Identifier","unusedVar","'ProfilePage' is defined but never used.","'getUserByIdDispatch' is defined but never used.","'registerUserToDataBase' is defined but never used.","'Modal' is defined but never used.","'CityAdd' is defined but never used.","'firebaseUser' is assigned a value but never used.","'initialState' is assigned a value but never used.","'initialStateCity' is assigned a value but never used.","'category' is assigned a value but never used.","'showCategoryModal' is assigned a value but never used.","'handleShowCategory' is assigned a value but never used.","'handleCloseCategory' is assigned a value but never used.","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["117","118"],["119","120"],["121","122"],["123","124"],["125","126"],["127","128"],["129","130"],"Argument 'like' should be typed with a non-any type.","anyTypedArg",["131","132"],["133","134"],"Argument 'category' should be typed with a non-any type.",["135","136"],["137","138"],"'hideModal' is defined but never used.",{"messageId":"139","fix":"140","desc":"141"},{"messageId":"142","fix":"143","desc":"144"},{"messageId":"139","fix":"145","desc":"141"},{"messageId":"142","fix":"146","desc":"144"},{"messageId":"139","fix":"147","desc":"141"},{"messageId":"142","fix":"148","desc":"144"},{"messageId":"139","fix":"149","desc":"141"},{"messageId":"142","fix":"150","desc":"144"},{"messageId":"139","fix":"151","desc":"141"},{"messageId":"142","fix":"152","desc":"144"},{"messageId":"139","fix":"153","desc":"141"},{"messageId":"142","fix":"154","desc":"144"},{"messageId":"139","fix":"155","desc":"141"},{"messageId":"142","fix":"156","desc":"144"},{"messageId":"139","fix":"157","desc":"141"},{"messageId":"142","fix":"158","desc":"144"},{"messageId":"139","fix":"159","desc":"141"},{"messageId":"142","fix":"160","desc":"144"},{"messageId":"139","fix":"161","desc":"141"},{"messageId":"142","fix":"162","desc":"144"},{"messageId":"139","fix":"163","desc":"141"},{"messageId":"142","fix":"164","desc":"144"},"suggestUnknown",{"range":"165","text":"166"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"165","text":"167"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"168","text":"166"},{"range":"168","text":"167"},{"range":"169","text":"166"},{"range":"169","text":"167"},{"range":"170","text":"166"},{"range":"170","text":"167"},{"range":"171","text":"166"},{"range":"171","text":"167"},{"range":"172","text":"166"},{"range":"172","text":"167"},{"range":"173","text":"166"},{"range":"173","text":"167"},{"range":"174","text":"166"},{"range":"174","text":"167"},{"range":"175","text":"166"},{"range":"175","text":"167"},{"range":"176","text":"166"},{"range":"176","text":"167"},{"range":"177","text":"166"},{"range":"177","text":"167"},[3078,3081],"unknown","never",[4321,4324],[4327,4330],[1361,1364],[1416,1419],[2569,2572],[3189,3192],[3416,3419],[3422,3425],[3661,3664],[3667,3670]]