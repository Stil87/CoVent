[{"/Users/benjamin/CoVent/client/src/utils/userDatabaseFetch.ts":"1","/Users/benjamin/CoVent/client/src/reportWebVitals.ts":"2","/Users/benjamin/CoVent/client/src/components/ProfilePage/profilePage.tsx":"3"},{"size":3383,"mtime":1607184972310,"results":"4","hashOfConfig":"5"},{"size":425,"mtime":1607178671761,"results":"6","hashOfConfig":"5"},{"size":6059,"mtime":1607186394205,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1f1vmr5",{"filePath":"10","messages":"11","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"12","messages":"13","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},"/Users/benjamin/CoVent/client/src/utils/userDatabaseFetch.ts",["15","16","17"],"/Users/benjamin/CoVent/client/src/reportWebVitals.ts",["18"],"/Users/benjamin/CoVent/client/src/components/ProfilePage/profilePage.tsx",["19","20","21","22","23","24","25","26","27"],"import React from 'react';\nimport { FormEvent, useState } from 'react'\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { RootState } from '../../types/combinedStoreTypes';\nimport { Profile, User } from \"../../types/userTypes\";\nimport { Button, Modal } from 'react-bootstrap';\nimport { setUser } from \"../../redux/userState/userActions\";\nimport { profileUpdate, addCityToProfile } from '../../utils/systemFunction';\nimport { UserL, City, ProfileNew, CityAdd } from \"../../types/userLucasTypes\";\nimport './profilePage.css'\n\nexport const ProfilePage = () => {\n  const user = useSelector((state: RootState) => state.user)\n  const dispatch = useDispatch();\n\n  const initialState = {\n    picture: '',\n    description: '',\n    age: '',\n    gender: '',\n    location: '',\n  }\n\n  const initialStateCity: CityAdd = {\n    profileId: 0,\n    name: ''\n  }\n\n  console.log('INSIDE PROFILE-->');\n\n\n  // const [newUserDescription, setNewUserDescription] = useState<Profile>(initialState);\n  const [show, setShow] = useState(false);\n  const [showCityModal, setShowCityModal] = useState(false);\n  const [picture, setPicture] = useState('')\n  const [description, setDescription] = useState('')\n  const [age, setAge] = useState('')\n  const [gender, setGender] = useState('')\n  const [location, setLocation] = useState('')\n  const [city, setCity] = useState('');\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  const handleCloseCity = () => setShowCityModal(false);\n  const handleShowCity = () => setShowCityModal(true);\n\n\n\n  const handleChange = (ev: React.ChangeEvent<HTMLInputElement>, cb: any) => {\n    cb(ev.target.value)\n  };\n\n  const handleSubmit = (e: FormEvent) => {\n    e.preventDefault()\n\n    if (user && user.profile) {\n      const newUs: User = {\n        ...user, profile: {\n          userId: user.id,\n          picture: picture !== \"\" ? picture : user.profile.picture,\n          description: description !== \"\" ? description : user.profile.description,\n          age: age !== \"\" ? age : user.profile.age,\n          gender: gender !== \"\" ? gender : user.profile.gender,\n          location: location !== \"\" ? location : user.profile.location,\n        }\n      }\n      dispatch(profileUpdate(newUs))\n    }\n  };\n\n  const handleCitySubmit = (e: FormEvent) => {\n    e.preventDefault()\n    if (user.profile && user.profile.id) {\n      const cityObj: CityAdd = {\n        profileId: user.profile.id,\n        name: city\n      }\n      console.log('city-->', city);\n      console.log('cityObj-->', cityObj);\n      dispatch(addCityToProfile(cityObj, user))\n    }\n  };\n\n  return (\n    <>\n    {console.log('user-->', user)}\n      <div className=\"profile_page_container\">\n        <div className=\"profile_page_header_container\">\n\n          <div>Hello {user.firstName} </div>\n          <div>{user.profile && user.profile.age} </div>\n          <div className=\"profile_page_image_container\">\n            <img className=\"profile_page_image\" src={user.profile?.picture} alt=\"profile\" />\n          </div>\n\n          <div>\n            <Button variant=\"primary\" onClick={handleShow} className=\"profile_updatebutton\">\n              Edit Profile\n              </Button>\n\n            <Modal show={show} onHide={handleClose}>\n              <Modal.Header>\n                <Modal.Title>Edit Your Profile</Modal.Title>\n                <Modal.Body>\n                  <form>\n                    <input name=\"picture\" id=\"\" placeholder=\"Picture\" onChange={(e) => {\n                      handleChange(e, setPicture)\n                    }}></input>\n                    <input name=\"description\" id=\"\" placeholder=\"Description\" onChange={(e) => {\n                      handleChange(e, setDescription)\n                    }}></input>\n                    <input name=\"age\" id=\"\" placeholder=\"Age\" onChange={(e) => {\n                      handleChange(e, setAge)\n                    }}></input>\n                    <input name=\"gender\" id=\"\" placeholder=\"Gender\" onChange={(e) => {\n                      handleChange(e, setGender)\n                    }}></input>\n                    <input name=\"location\" id=\"\" placeholder=\"Location\" onChange={(e) => {\n                      handleChange(e, setLocation)\n                    }}></input>\n                  </form>\n                </Modal.Body>\n                <Modal.Footer>\n                  <Button variant=\"secondary\" onClick={handleClose}>\n                    Close\n                  </Button>\n                  <Button variant=\"primary\" onClick={(e) => {\n                    handleSubmit(e)\n                    handleClose()\n                  }}>\n                    Save Changes\n                  </Button>\n                </Modal.Footer>\n              </Modal.Header>\n\n            </Modal>\n\n          </div>\n\n          <div>\n            <Button variant=\"primary\" onClick={handleShowCity} className=\"city_add\">\n              Where do you wanna fucking go?\n              </Button>\n\n            <Modal show={showCityModal} onHide={handleCloseCity}>\n              <Modal.Header>\n                <Modal.Title>Add your City</Modal.Title>\n                <Modal.Body>\n                  <form>\n                    <input name=\"city\" id=\"\" placeholder=\"City\" onChange={(e) => {\n                      handleChange(e, setCity)\n                    }}></input>\n                  </form>\n                </Modal.Body>\n                <Modal.Footer>\n                  <Button variant=\"secondary\" onClick={handleCloseCity}>\n                    Close\n                  </Button>\n                  <Button variant=\"primary\" onClick={(e) => {\n                    handleCitySubmit(e)\n                    handleCloseCity()\n                  }}>\n                    Select\n                  </Button>\n                </Modal.Footer>\n              </Modal.Header>\n            </Modal>\n\n          </div>\n\n        </div>\n      </div>\n\n      {/* <div>You selected {user.profile && user.profile.cities && user.profile.cities[0].name} </div> */}\n\n      <div>Select activity first before going to matching</div>\n\n\n    </>\n  )\n}",{"ruleId":"28","severity":1,"message":"29","line":50,"column":63,"nodeType":"30","messageId":"31","endLine":50,"endColumn":66,"suggestions":"32"},{"ruleId":"28","severity":1,"message":"29","line":96,"column":69,"nodeType":"30","messageId":"31","endLine":96,"endColumn":72,"suggestions":"33"},{"ruleId":"28","severity":1,"message":"29","line":122,"column":41,"nodeType":"30","messageId":"31","endLine":122,"endColumn":44,"suggestions":"34"},{"ruleId":"35","severity":1,"message":"36","line":3,"column":25,"nodeType":"37","messageId":"38","endLine":3,"endColumn":57},{"ruleId":"39","severity":1,"message":"40","line":5,"column":10,"nodeType":"41","messageId":"42","endLine":5,"endColumn":17},{"ruleId":"39","severity":1,"message":"43","line":7,"column":10,"nodeType":"41","messageId":"42","endLine":7,"endColumn":17},{"ruleId":"39","severity":1,"message":"44","line":9,"column":10,"nodeType":"41","messageId":"42","endLine":9,"endColumn":15},{"ruleId":"39","severity":1,"message":"45","line":9,"column":17,"nodeType":"41","messageId":"42","endLine":9,"endColumn":21},{"ruleId":"39","severity":1,"message":"46","line":9,"column":23,"nodeType":"41","messageId":"42","endLine":9,"endColumn":33},{"ruleId":"35","severity":1,"message":"36","line":12,"column":28,"nodeType":"37","messageId":"38","endLine":12,"endColumn":33},{"ruleId":"39","severity":1,"message":"47","line":16,"column":9,"nodeType":"41","messageId":"42","endLine":16,"endColumn":21},{"ruleId":"39","severity":1,"message":"48","line":24,"column":9,"nodeType":"41","messageId":"42","endLine":24,"endColumn":34},{"ruleId":"28","severity":1,"message":"29","line":50,"column":70,"nodeType":"30","messageId":"31","endLine":50,"endColumn":73,"suggestions":"49"},"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["50","51"],["52","53"],["54","55"],"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType","@typescript-eslint/no-unused-vars","'Profile' is defined but never used.","Identifier","unusedVar","'setUser' is defined but never used.","'UserL' is defined but never used.","'City' is defined but never used.","'ProfileNew' is defined but never used.","'initialState' is assigned a value but never used.","'initialStateCity' is assigned a value but never used.",["56","57"],{"messageId":"58","fix":"59","desc":"60"},{"messageId":"61","fix":"62","desc":"63"},{"messageId":"58","fix":"64","desc":"60"},{"messageId":"61","fix":"65","desc":"63"},{"messageId":"58","fix":"66","desc":"60"},{"messageId":"61","fix":"67","desc":"63"},{"messageId":"58","fix":"68","desc":"60"},{"messageId":"61","fix":"69","desc":"63"},"suggestUnknown",{"range":"70","text":"71"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"70","text":"72"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"73","text":"71"},{"range":"73","text":"72"},{"range":"74","text":"71"},{"range":"74","text":"72"},{"range":"75","text":"71"},{"range":"75","text":"72"},[1416,1419],"unknown","never",[2569,2572],[3189,3192],[1626,1629]]